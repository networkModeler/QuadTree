////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// heap.h : header file for fixed size heap class
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef HEAP_H
#define HEAP_H

#include <queue>
#include "entry.h"
using namespace std;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Heap
{
    public:

        // Constructor
        Heap(int size);

        // Return if the size of the heap equals the maxSize
        bool full();

        // Return the top element of the heap
        Entry* top();

        // Push or reject a possible new member
        bool pushOrReject(Entry* entry);

        // Return a vector with members in sorted order
        void toVector(vector<Entry*>& neighbors);

    private:

        int maxSize;
        priority_queue<Entry*, vector<Entry*>, Entry> heap;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif  HEAP_H